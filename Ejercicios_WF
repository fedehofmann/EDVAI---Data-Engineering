
Ejercicios SQL - Window Functions

1)

select c.category_name, p.product_name, p.unit_price, avg(p.unit_price) over (partition by c.category_id)
from categories as c
inner join products as p 
on c.category_id = p.category_id;

2)

select avg(od.unit_price*od.quantity) over (partition by o.customer_id) as promedio_venta,
o.order_id, o.customer_id, o.employee_id, o.required_date, o.shipped_date 
from orders as o
inner join order_details as od
on o.order_id  = od.order_id;

3)

select p.product_name, c.category_name, p.quantity_per_unit, od.unit_price, od.quantity, 
avg(od.quantity) over (partition by p.category_id) as avgquantity
from order_details od 
inner join products p on od.product_id = p.product_id 
inner join categories c on p.category_id = c.category_id 
order by c.category_name, p.product_name;

4)

select customer_id, order_date, min(order_date) over (partition by customer_id)
from orders;

5)

select product_id, product_name, unit_price, category_id, max(unit_price) over (partition by category_id)
from products;

6)

select rank() over (order by sum(od.quantity) desc), p.product_name, sum(od.quantity)
from products as p
inner join order_details as od
on p.product_id = od.product_id
group by p.product_name
order by sum(od.quantity) desc;

7)

select row_number() over (order by customer_id), *
from customers;

8)

select rank() over (order by birth_date desc), concat(first_name,last_name), birth_date
from employees;

9)

select sum(od.unit_price*od.quantity) over (partition by o.customer_id), o.order_id, c.customer_id, o.employee_id, o.order_date, o.required_date 
from customers as c
inner join orders as o 
on c.customer_id = o.customer_id 
inner join order_details as od
on o.order_id = od.order_id;

10)

select c.category_name, p.product_name, od.unit_price , od.quantity, sum(od.unit_price*od.quantity) over (partition by c.category_name)
from products as p
inner join order_details as od
on p.product_id = od.product_id
inner join categories as c
on p.category_id = c.category_id
order by c.category_name, p.product_name;

11)

select o.ship_country, od.order_id, o.shipped_date, o.freight, sum(o.freight) over (partition by o.ship_country)
from orders as o
inner join order_details as od
on o.order_id = od.order_id;

-No se de donde sacar gastos de env√≠o

12)

select c.customer_id, c.company_name, sum(od.unit_price*od.quantity) as total_sales, rank() over (order by sum(od.unit_price*od.quantity) desc)
from customers as c
inner join orders as o
on c.customer_id = o.customer_id
inner join order_details as od
on o.order_id = od.order_id
group by c.customer_id;

13)

select employee_id, first_name, last_name, hire_date, rank() over(order by hire_date)
from employees;

14)

select p.product_id, p.product_name, max(od.unit_price) as max_price, rank() over (order by max(od.unit_price) desc) as price_rank
from products as p
inner join order_details as od
on p.product_id = od.product_id
group by p.product_id
order by max_price desc;

15)

select order_id, product_id, quantity, lag(quantity) over (order by order_id)
from order_details;

16)

select order_id, order_date, customer_id, lag(order_date) over (partition by customer_id order by order_date)
from orders;

17)

select product_id, product_name, unit_price, lag(unit_price) over (order by product_id) as lastunitprice,
unit_price - lag(unit_price) over (order by product_id) as pricedifference
from products;

18)

select product_name, unit_price, lead(unit_price) over (order by product_name)
from products;

19)

select c.category_name, sum(od.unit_price*od.quantity) as total_sales, 
lead(sum(od.unit_price*od.quantity)) over (order by c.category_name)
from categories as c
inner join products as p 
on c.category_id = p.category_id
inner join order_details as od 
on od.product_id = p.product_id
group by c.category_name;

